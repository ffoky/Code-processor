basePath: /
definitions:
  types.GetTaskResultHandlerResponse:
    properties:
      result:
        type: string
    type: object
  types.GetTaskStatusHandlerResponse:
    properties:
      status:
        type: string
    type: object
  types.PostTaskHandlerRequest:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  types.PostTaskHandlerResponse:
    properties:
      taskId:
        type: string
    type: object
  types.PostUserLoginHandlerRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  types.PostUserLoginHandlerResponse:
    properties:
      session-id:
        type: string
    type: object
  types.PostUserRegistrationHandlerRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  types.PostUserRegistrationHandlerResponse:
    properties:
      status-ok:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Homework swagger api, added sessions and auth.
  title: Homework1
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user by login and password
      parameters:
      - description: user login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.PostUserLoginHandlerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PostUserLoginHandlerResponse'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Login user
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Create new user with the specified id, login and password
      parameters:
      - description: User creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.PostUserRegistrationHandlerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PostUserRegistrationHandlerResponse'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Create User
      tags:
      - user
  /result/{id}:
    get:
      consumes:
      - application/json
      description: Get task result by its id
      parameters:
      - description: Task tid
        example: '"550e8400-e29b-41d4-a716-446655440000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetTaskResultHandlerResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get task result
      tags:
      - task
  /status/{id}:
    get:
      consumes:
      - application/json
      description: Get task status by its id
      parameters:
      - description: Task tid
        example: '"550e8400-e29b-41d4-a716-446655440000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetTaskStatusHandlerResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get task status
      tags:
      - task
  /task:
    delete:
      consumes:
      - application/json
      description: Delete task by its id
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete task
      tags:
      - task
    post:
      consumes:
      - application/json
      description: Create new task with the specified id and result
      parameters:
      - description: Task creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.PostTaskHandlerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PostTaskHandlerResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create task
      tags:
      - task
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: 'Authorization: Bearer'
    type: apiKey
swagger: "2.0"
